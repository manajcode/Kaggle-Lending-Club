library(pacman)
p_load(tidyverse,Amelia,survey)
getwd()
full_data<- read.csv(file = "./accepted_2007_to_2018q4/accepted_2007_to_2018Q4.csv", header= TRUE)
saveRDS(object = full_data, file = "LCData.rds")
full_data <- full_data %>%
separate(issue_d, into = c("Issue_Month", "Issue_Year"), sep="-")
full_data %>%
filter( loan_status == "Default")
full_data %>%
filter( loan_status == "Default", between(Issue_Year, 2012,2014))
full_data %>%
filter( loan_status == "Default") %>%
filter(between(Issue_Year, 2012, 2014))
full_data %>%
filter( loan_status == "Default") %>%
filter(Issue_Year %in% c("2012", "2013" "2014"))
full_data %>%
filter( loan_status == "Default") %>%
filter(Issue_Year %in% c("2012", "2013", "2014"))
levels(full_data$loan_status)
full_data <- full_data %>%
mutate(borrower_status = ifelse(loan_status == "Current" | loan_status == "Fully Paid" | loan_status == "Does not meet the credit policy. Status:Fully Paid", "safe client", "risky client"))
unique(full_data$borrower_status)
table(full_data$borrower_status)
prop.table(table(full_data$borrower_status))
full_data$Issue_Year <- as.integer(full_data$Issue_Year)
tf <- full_data %>% filter(between(Issue_Year, 2012, 2014))
rm(full_data)
table(tf$Issue_Year)
table(tf$borrower_status)
prop.table(table(tf$Issue_Year))
tab2<- table(tf$borrower_status, tf$Issue_Year)
prop.table(tab2, margin = 1)
#7.a) data representation per year
table(tf$Issue_Year)
#7.b) number of safe and risky clients within time frame
table(tf$borrower_status)
#7.c) % representation of each year within the data
prop.table(table(tf$Issue_Year))
#7.d) make a table of number of type of borrower per year
tab2<- table(tf$borrower_status, tf$Issue_Year)
prop.table(tab2, margin = 1)
reducedtwfr <- stratsample(as.character(tf$Issue_Year), counts = c("2012" = 28254, "2013" = 28254, "2014" = 28254))
#8.b) now select the rows from tf based on reducedtwfr
tf2 <- tf[reducedtwfr,]
table(tf2$borrower_status)
table(tf2$loan_status)
table(tf2$borrower_status)
table(tf2$loan_status)
prop.table(table(tf2$borrower_status))
table(tf2$loan_status)
saveRDS(object = tf2, file = "cleaneddata.rds")
rm(tf)
rm(tf, reducedtwfr,tab2)
#2.a) read the csv into the environment. this line of code
# is ran once and doesn't need to be run again.
#full_data<- read.csv(file = "./accepted_2007_to_2018q4/accepted_2007_to_2018Q4.csv", header= TRUE)
#2.b) save the full data into an rds file, full_data.
#saveRDS(object = full_data, file = "LCData.rds")
#2.c) Reload rds file back to the environment.
full_data<-readRDS(file= "LCData.rds")
library(pacman)
p_load(tidyverse,Amelia,survey)
library(pacman)
p_load(tidyverse,Amelia,survey)
full_data %>%
filter( loan_status == "Default") %>%
filter(Issue_Year %in% c("2012", "2013", "2014"))
full_data <- full_data %>%
separate(issue_d, into = c("Issue_Month", "Issue_Year"), sep="-")
full_data %>%
filter( loan_status == "Default") %>%
filter(Issue_Year %in% c("2012", "2013", "2014"))
View(full_data)
levels(full_data$loan_status)
full_data <- full_data %>%
mutate(borrower_status = ifelse(loan_status == "Current" | loan_status == "Fully Paid" | loan_status == "Does not meet the credit policy. Status:Fully Paid", "safe client", "risky client"))
unique(full_data$borrower_status)
table(full_data$borrower_status)
prop.table(table(full_data$borrower_status))
#6.a) convert issue year from character to type integer
full_data$Issue_Year <- as.integer(full_data$Issue_Year)
#6.b) now filter for years 2012 through 2014
tf <- full_data %>% filter(between(Issue_Year, 2012, 2014))
#6.c) toss the full data
rm(full_data)
#7.a) data representation per year
table(tf$Issue_Year)
#7.b) number of safe and risky clients within time frame
table(tf$borrower_status)
#7.c) % representation of each year within the data
prop.table(table(tf$Issue_Year))
#7.d) make a table of number of type of borrower per year
tab2<- table(tf$borrower_status, tf$Issue_Year)
prop.table(tab2, margin = 1)
#8.a) take your stratified sample
reducedtwfr <- stratsample(as.character(tf$Issue_Year), counts = c("2012" = 28254, "2013" = 28254, "2014" = 28254))
#8.b) now select the rows from tf based on reducedtwfr
tf2 <- tf[reducedtwfr,]
#8.c) check the response and predictor variables
prop.table(table(tf2$borrower_status))
table(tf2$loan_status)
rm(tf, reducedtwfr,tab2)
